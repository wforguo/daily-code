{"version":3,"mappings":"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","names":["relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","request","axios","config","res","user","data","api","useUserStore","defineStore","password","userData","useMenuStore","list","_sfc_main$b","defineComponent","menu","router","useRouter","to","onBeforeRouteLeave","name","_hoisted_1","_component_el_container","_openBlock","_withCtx","_component_el_aside","_createVNode","_a","_component_el_menu_item","_component_el_breadcrumb","_component_el_main","_component_el_card","__default__","jQuery","selector","__publicField","$el","len","i","$","$h","$p","rawCode$1","asyncF1","resolve","asyncF2","foo","bar","item","res1","e","rawCode","_sfc_main$7","ref","getNowTime","h","now","m","s","nowTime","_sfc_main$6","_sfc_main$5","reactive","index","toRefs","onMounted","watch","newValue","oldValue","onErrorCaptured","err","_component_AsyncShow","_component_Timer","_createElementVNode","_component_el_divider","_sfc_main$2","ElMessage","_createElementBlock","_toDisplayString","_ctx","hello","Person111","person111","Person222","person222","PersonA","Teacher","age","XiaoJieJie","_age","www1","Status","get","_sfc_main","_component_we_button","_hoisted_2","routes","views","componentPath","module","routerName","$component","title","createRouter","createWebHistory","menus","app","createApp","App","createPinia","ElementPlus","WeDesign","registerMicroApps","start"],"sources":["../../../vue-app/vue3-app/vite/modulepreload-polyfill","../../../vue-app/vue3-app/src/libs/request.ts","../../../vue-app/vue3-app/src/api/user.ts","../../../vue-app/vue3-app/src/api/index.ts","../../../vue-app/vue3-app/src/store/user.ts","../../../vue-app/vue3-app/src/store/menu.ts","../../../vue-app/vue3-app/src/App.vue","../../../vue-app/vue3-app/src/views/Algorithm/index.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/index.vue","../../../vue-app/vue3-app/src/views/ES6/index.ts","../../../vue-app/vue3-app/src/views/ES6/index.vue","../../../vue-app/vue3-app/src/components/Timer.vue","../../../vue-app/vue3-app/src/components/AsyncShow.vue","../../../vue-app/vue3-app/src/views/Home/index.vue","../../../vue-app/vue3-app/src/views/JsBase/index.vue","../../../vue-app/vue3-app/src/views/JsWebApi/index.vue","../../../vue-app/vue3-app/src/views/Pinia/index.vue","../../../vue-app/vue3-app/src/views/TypeScript/index.ts","../../../vue-app/vue3-app/src/views/TypeScript/index.vue","../../../vue-app/vue3-app/src/views/WeiDesign/index.vue","../../../vue-app/vue3-app/src/router/index.ts","../../../vue-app/vue3-app/src/main.ts"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","/**\n * @Author: forguo\n * @Date: 2022/5/16 21:29\n * @Description: request.ts.js\n */\n\nimport axios from 'axios'\n\nconst request = axios.create({\n    baseURL: '/api'\n})\n\nrequest.interceptors.request.use(config => {\n    console.log(config)\n    return config\n})\n\nrequest.interceptors.response.use(res => {\n    console.log('res --->', res)\n    if (res.status === 200) {\n        return Promise.resolve(res.data)\n    }\n    return Promise.reject(res)\n})\n\nexport default request\n","/**\n * @Author: forguo\n * @Date: 2022/7/14 13:58\n * @Description: user\n */\nimport request from '@/libs/request'\n\nexport default {\n    /**\n     * Simulate a login\n     * @param {object} data\n     */\n    login: (data: any) =>\n        request({\n            method: 'post',\n            url: '/users/login',\n            data\n        })\n}\n","/**\n * @Author: forguo\n * @Date: 2022/7/14 14:00\n * @Description: index\n */\nimport user from './user'\n\nexport default {\n    user\n}\n","import { defineStore, acceptHMRUpdate } from 'pinia'\nimport api from '@/api'\n\nconst useUserStore = defineStore({\n    id: 'user',\n    state: () => ({\n        name: '',\n        isAdmin: false,\n        signature: ''\n    }),\n\n    actions: {\n        /**\n         * user  logout\n         */\n        logout() {\n            this.$patch({\n                name: '',\n                isAdmin: false\n            })\n        },\n        /**\n         * user login\n         * @param {string} user\n         * @param {string} password\n         */\n        async login(user: string, password: string) {\n            const userData = await api.user.login({\n                user,\n                password\n            })\n            const data = {\n                name: user,\n                ...userData.data\n            }\n            console.log('login-success', data)\n            this.$patch(data)\n        }\n    }\n})\n\nexport default useUserStore\n\nif (import.meta.hot) {\n    import.meta.hot.accept(acceptHMRUpdate(useUserStore, import.meta.hot))\n}\n","import { defineStore, acceptHMRUpdate } from 'pinia'\n\nconst useMenuStore = defineStore({\n    id: 'menu',\n    state: () => ({\n        list: []\n    }),\n    actions: {\n        updateMenu(list: Array<any>) {\n            console.log(list)\n            this.$patch({\n                list: [...this.list, ...list]\n            })\n        }\n    }\n})\n\nexport default useMenuStore\n\nif (import.meta.hot) {\n    import.meta.hot.accept(acceptHMRUpdate(useMenuStore, import.meta.hot))\n}\n","<template>\n    <el-container style=\"height: 100vh; overflow: hidden\">\n        <el-aside style=\"height: 100vh\" width=\"200px\">\n            <el-menu :default-active=\"$route?.path || '/'\" router style=\"height: 100%\">\n                <el-menu-item\n                    :index=\"path\"\n                    v-for=\"{ path, title, name } in menu.list\"\n                    :key=\"path\"\n                    @select=\"handleNav(name)\"\n                >\n                    <span>{{ title }}</span>\n                </el-menu-item>\n                <el-menu-item :to=\"{ path: '/vue2-app' }\" index=\"/vue2-app\">\n                    <span>vue2微应用</span>\n                </el-menu-item>\n            </el-menu>\n        </el-aside>\n        <el-container>\n            <el-header style=\"background-color: #f6f9fe; display: flex; align-items: center\">\n                <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n                    <el-breadcrumb-item>{{ $route?.meta?.title }}</el-breadcrumb-item>\n                </el-breadcrumb>\n            </el-header>\n            <el-main style=\"background: #f2f3f5\">\n                <el-card\n                    style=\"width: 100%; height: 100%; box-sizing: border-box\"\n                    shadow=\"never\"\n                    body-style=\"width: 100%; height: 100%;\"\n                >\n                    <template #header>\n                        <div class=\"card-header\">\n                            <span>{{ $route?.meta?.title }}</span>\n                        </div>\n                    </template>\n                    <router-view />\n                    <div id=\"vue2App\"></div>\n                </el-card>\n            </el-main>\n            <el-footer style=\"background-color: #f6f9fe; display: flex; align-items: center; justify-content: center\">\n                &copy; 2022\n            </el-footer>\n        </el-container>\n    </el-container>\n</template>\n\n<script lang=\"ts\">\nimport { onBeforeRouteUpdate, useRouter, onBeforeRouteLeave } from 'vue-router'\nimport { defineComponent } from 'vue'\nimport { useMenuStore } from '@/store'\nexport default defineComponent({\n    components: {},\n    setup() {\n        const menu = useMenuStore()\n        const router = useRouter()\n        onBeforeRouteUpdate(to => {\n            console.log({ ...router }, to)\n        })\n        onBeforeRouteLeave(to => {\n            console.log({ ...router }, to)\n        })\n        const handleNav = (name: string) => {\n            console.log(name)\n            router.push({\n                name\n            })\n        }\n        return {\n            menu,\n            handleNav,\n            router\n        }\n    }\n})\n</script>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/10/10 14:23\n * @Description: index\n-->\n<template>\n    <div class=\"page\">算法</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'AlgorithmView',\n    title: '算法',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<template>\n    <div class=\"page design-patterns\">\n        <el-collapse>\n            <el-collapse-item title=\"面向对象\">\n                <h2>面向对象的概念</h2>\n                <h2>面向对象的三要素</h2>\n                <h2>jQuery中的应用</h2>\n                <h2>面向对象的意义</h2>\n                <div>——数据结构化 比如浏览器的渲染，最终是解析成了DOM树，cssom，最后才去渲染</div>\n            </el-collapse-item>\n            <el-collapse-item title=\"5大设计原则\">\n                <div>5大设计原则</div>\n            </el-collapse-item>\n            <el-collapse-item title=\"23种设计模式\">\n                <div>23种设计模式</div>\n            </el-collapse-item>\n            <el-collapse-item title=\"项目应用\">\n                <div>项目应用</div>\n            </el-collapse-item>\n        </el-collapse>\n    </div>\n</template>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'DesignPatterns',\n    title: '设计模式',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { nextTick } from 'vue'\n\nclass jQuery {\n    [key: string]: any\n    selector: string\n    length: number\n    constructor(selector: string) {\n        const slice = Array.prototype.slice\n        const $el = slice.call(document.querySelectorAll(selector))\n        const len = $el.length\n        for (let i = 0; i < len; i++) {\n            this[i] = $el[i]\n        }\n        this.selector = selector\n        this.length = len\n    }\n    addClass() {}\n}\n\nconst $ = function (selector: string) {\n    return new jQuery(selector)\n}\n\nnextTick(() => {\n    const $h = $('h2')\n    console.log($h)\n    const $p = $('section')\n    console.log($p)\n})\n</script>\n","export default async () => {\n    // async函数返回的是 Promise 对象，可以作为await命令的参数\n    const asyncF1 = async function () {\n        // 这里需要加return，将异步执行结果进行返回\n        return await new Promise(resolve => {\n            setTimeout(() => {\n                console.log('resolve 1')\n                resolve('async 1')\n            }, 1000)\n        })\n    }\n\n    const asyncF2 = function () {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                console.log('resolve 2')\n                resolve('async 2')\n            }, 1000)\n        })\n    }\n\n    const request = async function () {\n        try {\n            // 写法二\n            // let fooPromise = asyncF1();\n            // let barPromise = asyncF2();\n            // let res1 = await fooPromise;\n            // let res2 = await barPromise;\n            // // let res1 = await asyncF1();\n            // // let res2 = await asyncF2();\n            // console.log(res1);\n            // console.log(res2);\n            //\n            const [foo, bar] = await Promise.all([asyncF1(), asyncF2()])\n            console.log(foo, bar)\n\n            // 并发\n            for (const item of [asyncF1, asyncF2]) {\n                const res1 = await item()\n                console.log(res1)\n            }\n\n            // 继发\n            // for (let i = 0;i < 3; i++) {\n            //     console.log(i);\n            //     let res1 = await asyncF1();\n            //     console.log(res1);\n            // }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    await request()\n}\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/9/17 22:14\n * @Description: index\n-->\n<template>\n    <div class=\"page\">es6</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'ES6View',\n    title: 'ES6',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n\n<style scoped></style>\n","<template>\n    <div class=\"we-timer\">现在是：{{ nowTime }}</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, reactive, ref } from 'vue'\n\nexport default defineComponent({\n    props: {\n        msg: String\n    },\n    setup() {\n        const nowTime = ref('00:00:00')\n        const getNowTime = () => {\n            const now = new Date()\n            const h = now.getHours() < 10 ? `0${now.getHours()}` : now.getHours()\n            const m = now.getMinutes() < 10 ? `0${now.getMinutes()}` : now.getMinutes()\n            const s = now.getSeconds() < 10 ? `0${now.getSeconds()}` : now.getSeconds()\n            nowTime.value = `${h}:${m}:${s}`\n            setTimeout(getNowTime, 1000)\n        }\n\n        onMounted(() => {\n            getNowTime()\n        })\n\n        return {\n            nowTime,\n            getNowTime\n        }\n    }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.we-timer {\n    font-size: 13px;\n    color: #000;\n}\n</style>\n","<!--\n * @Name: AsyncShow.vue\n * @Author: forguo\n * @Date: 2022/5/17 16:03\n * @Description: AsyncShow\n-->\n<template>\n    <div>\n        {{ res.data }}\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport axios from 'axios'\n\nexport default defineComponent({\n    name: 'AsyncShow',\n    async setup() {\n        const res = await axios({\n            url: 'https://www.forguo.cn/api/common/wechat/sdk',\n            params: {\n                url: window.location.href\n            }\n        })\n        return {\n            res: res.data\n        }\n    }\n})\n</script>\n\n<style scoped></style>\n","<template>\n    <div class=\"home\">\n        <Timer />\n        <h4>排行榜</h4>\n        <div>\n            <p v-for=\"(item, index) in companies\" :key=\"item.id\">\n                <el-tag>{{ item.name }}</el-tag>\n                <el-button @click=\"send(index)\">投递</el-button>\n            </p>\n        </div>\n\n        <p>已经投递：{{ target }}</p>\n\n        <el-divider />\n\n        <Suspense>\n            <template #default>\n                <AsyncShow />\n            </template>\n            <template #fallback>加载中...</template>\n        </Suspense>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { reactive, toRefs, onBeforeMount, onMounted, onErrorCaptured, watch } from 'vue'\nimport Timer from '@/components/Timer.vue'\nimport AsyncShow from '@/components/AsyncShow.vue'\n\ninterface DataProps {\n    companies: object[]\n    target: object\n    send: (index: number) => void\n}\n\nexport default {\n    name: 'HomeView',\n    title: '首页',\n    components: {\n        AsyncShow,\n        Timer\n    },\n    setup() {\n        console.log('1-开始创建组件-----setup()')\n        const data: DataProps = reactive({\n            companies: [\n                {\n                    id: '10001',\n                    name: '阿里'\n                },\n                {\n                    id: '10002',\n                    name: '腾讯'\n                },\n                {\n                    id: '10003',\n                    name: '字节'\n                }\n            ],\n            target: {},\n            send: (index: number) => {\n                data.target = data.companies[index]\n            }\n        })\n\n        const ref = toRefs(data)\n\n        /**\n         * 生命周期\n         */\n        onBeforeMount(() => {\n            console.log('2-组件挂载到页面之前执行-----onBeforeMount()')\n        })\n\n        onMounted(() => {\n            console.log('3-组件挂载到页面之后执行-----onMounted()')\n        })\n        // onBeforeUpdate(() => {\n        //     console.log(\"4-组件更新之前-----onBeforeUpdate()\");\n        // });\n        //\n        // onUpdated(() => {\n        //     console.log(\"5-组件更新之后-----onUpdated()\");\n        // });\n\n        // onRenderTracked((event) => {\n        //     console.log(\"状态跟踪组件----------->\");\n        //     console.log(event);\n        // });\n        //\n        // onRenderTriggered((event) => {\n        //     console.log(\"状态触发组件--------------->\");\n        //     console.log(event);\n        // });\n\n        // 监听多个使用数组\n        watch(ref.target, (newValue: any, oldValue: object) => {\n            console.log(`new--->${JSON.stringify(newValue)}`)\n            console.log(`old--->${JSON.stringify(oldValue)}`)\n            if (newValue && newValue.name) {\n                document.title = `已投递：${newValue.name}`\n            }\n        })\n\n        // 异常捕获\n        onErrorCaptured(err => {\n            console.log('/*******************/')\n            console.log(err)\n            console.log('/*******************/')\n        })\n        return {\n            ...ref\n        }\n    }\n}\n</script>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/10/10 15:45\n * @Description: index\n-->\n<template>\n    <div>JS基础</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nonBeforeMount(() => {})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'JsBaseView',\n    title: 'JS基础',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/10/10 15:45\n * @Description: index\n-->\n<template>\n    <div>Web Api</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'WebApiView',\n    title: 'WebApi',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<!--\n * @Name: Pinia.vue\n * @Author: forguo\n * @Date: 2022/7/14 13:50\n * @Description: Pinia\n-->\n<template>\n    <div class=\"Pinia\">\n        <p>name: {{ user.name }}</p>\n        <p>signature: {{ user.signature || '' }}</p>\n        <p>\n            {{ JSON.stringify(user) }}\n        </p>\n        <el-button @click=\"handleAddCart\">登录</el-button>\n\n        <hr />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useUserStore } from '@/store'\nimport { ElMessage } from 'element-plus'\n\nexport default defineComponent({\n    components: {},\n    title: '状态',\n    setup() {\n        const user = useUserStore()\n        const handleAddCart = async () => {\n            console.log(user)\n            await user.login('admin', 'root')\n            console.log('handleAddCart --->')\n            ElMessage.success('Login Success~')\n        }\n        return {\n            user,\n            handleAddCart\n        }\n    }\n})\n</script>\n","export default () => {\n    /**\n     * @Author: forguo\n     * @Date: 2021/10/25 10:11\n     * @Description: typescript 学习\n     */\n\n    // 1.全局安装 typescript\n    // npm install typescript -g\n    // yarn global add typescript\n\n    /**\n     * @title typescript的静态类型\n     */\n\n    // ** 基础静态类型\n    // null,undefined,symbol,boolean，void\n    const count: number = 1\n    const www: string = 'www'\n\n    // ** 自定义静态类型\n    interface People1 {\n        name: string\n        age: number\n    }\n\n    const weiGuo: People1 = {\n        name: 'weiGuo',\n        age: 25\n        // sex: 'man',\n    }\n\n    // ** 对象类型\n\n    // 对象\n    const my: {\n        name: string\n        age: number\n    } = {\n        name: 'weiGuo',\n        age: 25\n        // sex: 'man',\n    }\n\n    // 数组\n    const list: number[] = [1, 2, 3]\n\n    // 函数类型\n    const fn: () => string = () => 'fn1'\n\n    /**\n     * @title 类型注释和类型推断\n     */\n\n    // ** 类型注释\n    const count2: number = 123\n\n    // ** 类型推断\n    const count3 = 123\n\n    // ===> 工作使用问题（潜规则）\n    // 如果 TS 能够自动分析变量类型， 我们就什么也不需要做了\n    // 如果 TS 无法分析变量类型的话， 我们就需要使用类型注解\n\n    /**\n     * @title 函数参数和返回类型定义\n     */\n\n    // ** 简单类型定义\n\n    function getTotal(one: number, two: number): number {\n        return one + two\n    }\n\n    getTotal(1, 2)\n\n    // ** 无返回值的定义: void\n    function hello(): void {\n        console.log('hello')\n    }\n\n    hello()\n\n    // ** never返回值类型\n    // 抛出异常\n    function errFun(): never {\n        throw new Error()\n        console.log('error')\n    }\n\n    // 死循环\n    function whileFun(): never {\n        while (true) {}\n        console.log('error')\n    }\n\n    // ** 函数参数为对象\n\n    function add({ one, two }: { one: number; two: number }) {\n        return one + two\n    }\n\n    const total = add({ one: 1, two: 2 })\n\n    /**\n     * @title 数组类型的定义\n     */\n\n    // ** 基本类型\n    const numArr: number[] = [1, 2, 3]\n    const strArr: string[] = ['1', '2', '3']\n    const undefArr: undefined[] = [undefined, undefined, undefined]\n    const multiArr: (number | string)[] = ['1', 1] // 多个类型\n\n    // ** 对象类型的定义\n    // 类型别名(type alias)\n    type Info = {\n        name: string\n        age: number\n    }\n\n    const infoList: Info[] = [\n        {\n            name: 'forguo',\n            age: 25\n        }\n    ]\n\n    // 类进行定义\n    class InfoClass {\n        name: string | undefined\n        age: number | undefined\n    }\n\n    const infoList2: InfoClass[] = [\n        {\n            name: 'forguo',\n            age: 25\n        }\n    ]\n\n    /**\n     * @title 元组的使用和类型约束\n     */\n\n    // ** 基本应用\n\n    // 简单类型注解\n    const xiaojiejie: (string | number)[] = [0, 'teacher', 28]\n\n    // 数组中的每个元素类型的位置给固定住了，这就叫做元组\n    const xiaojiejie1: [string, number] = ['teacher', 28]\n\n    // ** 使用\n\n    const xiaojiejies: [string, string, number][] = [\n        ['dajiao', 'teacher', 28],\n        ['liuying', 'teacher', 18],\n        ['cuihua', 'teacher', 25]\n    ]\n\n    /**\n     * @title typescript中的interface接口\n     * @desc 用来规范类型的\n     */\n\n    // ** 初步了解\n    interface Girl {\n        name: string\n        age: number\n    }\n\n    const girl: Girl = {\n        name: 'xiaohua',\n        age: 18\n    }\n\n    // ** 类型别名和接口的区别\n    // 类型别名可以直接给类型，比如string，而接口必须代表对象。\n\n    type Name = string\n    const people1: Name = 'name'\n\n    // ** 可选值\n    interface Girl1 {\n        name: string\n        age?: number\n        address?: string\n    }\n\n    const girl1: Girl1 = {\n        name: 'nicai'\n        // age: 18,\n        // address: '浙江杭州'\n    }\n\n    // ** 任意值\n\n    interface Girl3 {\n        name: string\n        [propName: string]: any // 这个的意思是，属性的名字是字符串类型，属性的值可以是任何类型。\n        say(): string\n    }\n\n    const girl3: Girl3 = {\n        name: 'name',\n        sex: 1,\n        say() {\n            return '欢迎光临 ，红浪漫洗浴！！'\n        }\n    }\n\n    // ** 接口和类的约束\n\n    class girlC implements Girl3 {\n        name = ''\n        sex = ''\n        say() {\n            return this.name\n        }\n    }\n\n    // ** 接口间的继承\n\n    interface Teacher extends Girl {\n        teach(): string\n    }\n\n    /* 接口只是在 TypeScript 里帮我们作语法校验的工具，编译成正式的js代码，就不会有任何用处了。 */\n\n    /**\n     * @title typescript中类的概念和使用\n     */\n\n    /**\n     * @title typescript中类的访问类型\n     */\n\n    // ** public 默认 允许在类的内部和外部被调用\n\n    // ** private 只允许在类的内部被调用，外部不允许调用\n\n    // ** protected 允许在类内及继承的子类中使用\n\n    /**\n     * @title typescript中类的构造函数\n     */\n\n    class Person111 {\n        public name: string\n        constructor(name: string) {\n            this.name = name\n        }\n    }\n\n    const person111 = new Person111('www')\n    console.log(person111.name)\n\n    // 简写\n    class Person222 {\n        constructor(public name: string) {}\n    }\n    const person222 = new Person222('http')\n    console.log(person222.name)\n\n    // 类继承中的构造器写法\n\n    class PersonA {\n        constructor(public name: string) {\n            // 这里就不用再去 this.name = name;\n        }\n    }\n\n    class Teacher extends PersonA {\n        constructor(name: string, public age: number) {\n            super(name)\n        }\n    }\n\n    console.log(new Teacher('罗翔', 18))\n\n    /**\n     * @title typescript中类的Getter、Setter和static的使用\n     */\n\n    class XiaoJieJie {\n        public readonly _name: string\n        constructor(name: string, private _age: number) {\n            this._name = name\n        }\n        // ** get\n        get age() {\n            return this._age\n        }\n        // ** set\n        set age(age: number) {\n            this._age = age\n        }\n        say() {\n            return 'I am ' + this._age + 'years old' // XiaoJieJie.prototype.say = function\n        }\n        // ** 不用 new 出对象就可以使用类里的方法\n        static sayLove() {\n            return 'I Love you' // XiaoJieJie.sayLove = function\n        }\n    }\n    const www1 = new XiaoJieJie('www', 18)\n    www1.age = 20\n    // www1._name = 'www'; // 不可以修改\n    console.log(www1.age)\n    // XiaoJieJie.sayLove();\n\n    /**\n     * @title 抽象类的使用\n     */\n\n    abstract class DaBaoJian {\n        abstract skill(): any // 没有具体方法，这里不写括号\n    }\n\n    class PrimaryWaiter extends DaBaoJian {\n        skill() {\n            console.log('初级大保健')\n        }\n    }\n\n    class IntermediateWaiter extends DaBaoJian {\n        skill() {\n            console.log('中级大保健')\n        }\n    }\n\n    class SeniorWaiter extends DaBaoJian {\n        skill() {\n            console.log('终极大保健')\n        }\n    }\n\n    /**\n     * @title tsconfig.json\n     */\n\n    // typescript 的编译配置文件\n\n    // tsc init // 初始化tsconfig文件\n\n    // tsc // tsconfig编译\n\n    // ** 编译选项详解\n\n    // https://www.tslang.cn/docs/handbook/compiler-options.html\n\n    /**\n     * @title 联合类型和类型守护\n     */\n\n    // ** 联合类型 两个以上的参数类型\n    // ** 类型守护 对参数类型进行判断\n\n    /**\n     * @title 枚举的使用\n     */\n\n    enum Status {\n        success = 200,\n        error = 201,\n        auth = 401\n    }\n\n    console.log(Status.error)\n    console.log(Status[200])\n\n    /**\n     * @title 函数泛型\n     */\n\n    // 类型断言，此时不知道返回类型是什么，需要指定一个类型来处理\n    let res: number | string\n\n    res = 1\n\n    function get(data: number | string): number | string {\n        return data\n    }\n\n    ;(get(res) as string).length\n}\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/9/17 22:14\n * @Description: index\n-->\n<template>\n    <div>typescript</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'TsView',\n    title: 'Ts',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<template>\n    <div class=\"home\">\n        <h2>组件库</h2>\n\n        <el-divider />\n\n        <we-button>Default</we-button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup></script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'WeiDesignView',\n    title: '组件库',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n","import { createRouter, createWebHistory } from 'vue-router'\n\n// 路由集合\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        title: '首页',\n        component: () => import('@/views/Home/index.vue'),\n        meta: {\n            name: 'Home',\n            title: '首页'\n        }\n    }\n]\n\n// 匹配到的文件默认是懒加载的，通过动态导入实现，并会在构建时分离为独立的 chunk。如果你倾向于直接引入所有的模块（例如依赖于这些模块中的副作用首先被应用），你可以传入 { eager: true } 作为第二个参数：\nconst views = import.meta.glob(`@/views/*/index.vue`, { eager: true })\n\n// 动态加载路由\nfor (const componentPath in views) {\n    const module: any = views[componentPath]\n    const match: Array<any> = componentPath.match(/..\\/views\\/(\\w+)/) || []\n    /// 匹配到的路由名称\n    const routerName = match[1]\n    // 默认首页必须得\n    if (routerName && routerName !== 'Home') {\n        // 找到example的组件，并加载\n        const $component = module.default\n        const routerTitle = $component.title\n        const title = routerTitle || routerName\n        routes.push({\n            path: routerName === 'Home' ? '/' : `/${routerName}`,\n            name: routerName,\n            title,\n            component: $component,\n            meta: {\n                name: routerName,\n                title\n            }\n        })\n    }\n}\n\nconst router = createRouter({\n    history: createWebHistory(import.meta.env.BASE_URL),\n    routes: [...routes]\n})\n\nexport const menus = routes.map((item: any) => {\n    delete item.component\n    return {\n        ...item\n    }\n})\n\nexport default router\n","import { createApp, onMounted } from 'vue'\nimport { registerMicroApps, start } from 'qiankun'\nimport { createPinia } from 'pinia' // 状态管理\nimport { useMenuStore } from '@/store'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\nimport './assets/main.scss'\nimport router, { menus } from './router'\n// @ts-ignore\nimport WeDesign from '@wei_design/web-vue'\nimport '@wei_design/web-vue/lib/style.css'\nconsole.log(import.meta.env)\nconsole.log(process.env)\n\nconsole.log(\n    `%c Environment %c ${import.meta.env.MODE}`,\n    'padding: 1px; border-radius: 3px 0 0 3px; color: #fff; background: #606060',\n    'padding: 1px 5px 1px 1px; border-radius: 0 3px 3px 0; color: #fff; background: #42c02e'\n)\nconsole.log(\n    `%c Version %c ${process.env.APP_VERSION}`,\n    'padding: 1px; border-radius: 3px 0 0 3px; color: #fff; background: #606060',\n    'padding: 1px 5px 1px 1px; border-radius: 0 3px 3px 0; color: #fff; background: #1475b2'\n)\nconsole.log(\n    `%c BuildTime %c ${process.env.APP_BUILD_TIME}`,\n    'padding: 1px; border-radius: 3px 0 0 3px; color: #fff; background: #606060',\n    'padding: 1px 5px 1px 1px; border-radius: 0 3px 3px 0; color: #fff; background: #1475b2'\n)\n\nconst app = createApp(App)\n\napp.use(createPinia()).use(router).use(ElementPlus).use(WeDesign).mount('#app')\nconst menu = useMenuStore()\nmenu.updateMenu(menus)\n\n// 1、主应用中注册微应用\nregisterMicroApps([\n    {\n        name: 'vue2-app',\n        entry:\n            import.meta.env.MODE === 'development' ? '//localhost:10087' : '//wforguo.github.io/daily-code/vue2-app/',\n        container: '#vue2App',\n        activeRule: '/vue2-app',\n        props: { menus }\n    }\n])\nstart()\n"],"file":"assets/index.33b9ca38.js"}