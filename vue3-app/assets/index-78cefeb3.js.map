{"version":3,"file":"index-78cefeb3.js","sources":["../../../vue-app/vue3-app/src/plugin/log.ts","../../../vue-app/vue3-app/src/plugin/request.ts","../../../vue-app/vue3-app/src/plugin/ajax.ts","../../../vue-app/vue3-app/src/plugin/index.ts","../../../vue-app/vue3-app/src/api/user.ts","../../../vue-app/vue3-app/src/api/index.ts","../../../vue-app/vue3-app/src/store/user.ts","../../../vue-app/vue3-app/src/store/menu.ts","../../../vue-app/vue3-app/src/App.vue","../../../vue-app/vue3-app/src/views/Algorithm/index.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/patterns/FactoryPatterns.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/patterns/SinglePatterns.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/patterns/AdaptPatterns.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/patterns/DecoratorPatterns.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/patterns/ProxyPatterns.vue","../../../vue-app/vue3-app/src/views/DesignPatterns/index.vue","../../../vue-app/vue3-app/src/views/ES6/index.vue","../../../vue-app/vue3-app/src/components/Timer.vue","../../../vue-app/vue3-app/src/components/AsyncShow.vue","../../../vue-app/vue3-app/src/views/Home/index.vue","../../../vue-app/vue3-app/src/views/JsBase/index.vue","../../../vue-app/vue3-app/src/views/JsWebApi/index.vue","../../../vue-app/vue3-app/src/views/Pinia/index.vue","../../../vue-app/vue3-app/src/views/Race/index.vue","../../../vue-app/vue3-app/src/views/Talking/index.vue","../../../vue-app/vue3-app/src/views/TypeScript/index.ts","../../../vue-app/vue3-app/src/views/TypeScript/index.vue","../../../vue-app/vue3-app/src/views/WeiDesign/index.vue","../../../vue-app/vue3-app/src/router/index.ts","../../../vue-app/vue3-app/src/main.ts"],"sourcesContent":["/**\n * @Author: forguo\n * @Date: 2023/1/15 15:11\n * @Description: log.ts\n */\n\ninterface ILog {\n    capsule: (title: any, info: any, type: string) => void\n    colorful: (textArr: any[]) => void\n    default: (text: any) => void\n    primary: (text: any) => void\n    success: (text: any) => void\n    warning: (text: any) => void\n    info: (text: any) => void\n    danger: (text: any) => void\n}\n\nexport const log: any = {}\n\n/**\n * @description 返回这个样式的颜色值\n * @param {String} type 样式名称 [ default | primary | success | warning | info | danger ]\n * 同element-plus按钮主题\n * https://element-plus.org/zh-CN/guide/theming.html#%E9%80%9A%E8%BF%87-scss-%E5%8F%98%E9%87%8F\n */\nfunction typeColor(type = 'default') {\n    let color = ''\n    switch (type) {\n        case 'default':\n            color = '#515a6e'\n            break\n        case 'primary':\n            color = '#409eff'\n            break\n        case 'success':\n            color = '#67c23a'\n            break\n        case 'warning':\n            color = '#e6a23c'\n            break\n        case 'info':\n            color = '#909399'\n            break\n        case 'danger':\n            color = '#f56c6c'\n            break\n        default:\n            break\n    }\n    return color\n}\n\n/**\n * @description 打印一个 [ title | text ] 样式的信息\n * @param {String} title title text\n * @param {String} info info text\n * @param {String} type style\n */\nlog.capsule = function (title: any, info: any, type = 'primary') {\n    console.log(\n        `%c ${title} %c ${info} %c`,\n        'background:#35495E; padding: 1px; border-radius: 3px 0 0 3px; color: #fff;',\n        `background:${typeColor(type)}; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff;`,\n        'background:transparent'\n    )\n}\n\n/**\n * @description 打印彩色文字\n */\nlog.colorful = function (textArr: any[]) {\n    console.log(\n        `%c${textArr.map(t => JSON.stringify(t.text || '')).join('%c')}`,\n        ...textArr.map(t => `color: ${typeColor(t.type)};`)\n    )\n}\n\n/**\n * @description 打印 default 样式的文字\n */\nlog.default = function (text: any) {\n    log.colorful([{ text }])\n}\n\n/**\n * @description 打印 primary 样式的文字\n */\nlog.primary = function (text: any) {\n    log.colorful([{ text, type: 'primary' }])\n}\n\n/**\n * @description 打印 success 样式的文字\n */\nlog.success = function (text: any) {\n    log.colorful([{ text, type: 'success' }])\n}\n\n/**\n * @description 打印 warning 样式的文字\n */\nlog.warning = function (text: any) {\n    log.colorful([{ text, type: 'warning' }])\n}\n\n/**\n * @description 打印 info 样式的文字\n */\nlog.info = function (text: any) {\n    log.colorful([{ text, type: 'info' }])\n}\n\n/**\n * @description 打印 danger 样式的文字\n */\nlog.danger = function (text: any) {\n    log.colorful([{ text, type: 'danger' }])\n}\n\nexport default log\n","/**\n * @Author: forguo\n * @Date: 2022/5/16 21:29\n * @Description: request.ts.js\n */\n\nimport axios from 'axios'\nimport type { AxiosInstance, AxiosRequestConfig } from 'axios'\nimport { log } from '@/plugin/index'\n\nexport interface IResponse {\n    code?: number\n    message?: string\n    time?: string | number\n    data?: any\n}\n\nclass Request {\n    // axios实例\n    instance: AxiosInstance\n    // 用于存储控制器对象\n    abortControllerMap: Map<string, AbortController>\n    // 构造函数\n    constructor(config?: AxiosRequestConfig) {\n        // 创建axios实例\n        this.instance = axios.create({\n            baseURL: '/api',\n            ...config\n        })\n        // 用于存储控制器对象\n        this.abortControllerMap = new Map()\n        // 设置拦截器\n        this.setInterceptors(this.instance)\n    }\n    // 请求\n    request(config: AxiosRequestConfig): Promise<IResponse> {\n        return this.instance(config)\n    }\n    // 拦截器\n    setInterceptors(request: AxiosInstance) {\n        // 请求拦截器\n        request.interceptors.request.use(config => {\n            // toDo 也可以在这里做一个重复请求的拦截\n            // https://github.com/axios/axios/tree/main#abortcontroller\n            // 请求url为key\n            const url = config.url || ''\n            // 实例化控制器\n            const controller = new AbortController()\n            // 将控制器实例与请求绑定\n            config.signal = controller.signal\n            // 将控制器实例存储到Map中\n            this.abortControllerMap.set(url, controller)\n            // 设置请求头\n            config.headers = {\n                ...config.headers,\n                'x-auth-token': import.meta.env.VITE_TOKEN\n            }\n            return config\n        })\n        // 响应拦截器\n        request.interceptors.response.use(res => {\n            const url = res.config.url || ''\n            // 请求完成后，将控制器实例从Map中移除\n            this.abortControllerMap.delete(url)\n            if (axios.isCancel(res)) {\n                console.log('Request canceled', res)\n                return Promise.reject(res)\n            }\n            if (res.status === 200) {\n                return Promise.resolve(res.data)\n            }\n            log.danger(res)\n            return Promise.reject(res)\n        })\n    }\n    /**\n     * 取消全部请求\n     */\n    cancelAllRequest() {\n        for (const [, controller] of this.abortControllerMap) {\n            // 取消请求\n            controller.abort()\n        }\n        this.abortControllerMap.clear()\n    }\n    /**\n     * 取消指定的请求\n     * @param url 待取消的请求URL\n     */\n    cancelRequest(url: string | string[]) {\n        const urlList = Array.isArray(url) ? url : [url]\n        for (const _url of urlList) {\n            // 取消请求\n            this.abortControllerMap.get(_url)?.abort()\n            this.abortControllerMap.delete(_url)\n        }\n    }\n}\n\nexport default new Request()\n","/**\n * ajax\n */\nexport default (params: any) => {\n    return new Promise((resolve, reject) => {\n        const { method = 'get', url, data } = params\n        const xhr = new XMLHttpRequest()\n\n        xhr.open(method, url, true)\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded') // 简单请求\n        // xhr.setRequestHeader('Authorization', 'application/json; charset=utf-8'); // 复杂请求\n        xhr.onreadystatechange = function () {\n            /**\n             * readyState\n             * 0：还没调用\n             * 1：载入（正在发送）\n             * 2：载入完成\n             * 3：解析响应内容\n             * 4：解析完成\n             */\n            if (xhr.readyState === 4) {\n                /**\n                 * http状态码\n                 * 1XX 状态指示\n                 * 2XX 成功返回\n                 * 3XX 重定向\n                 * 4XX 客户端错误\n                 * 5XX 服务端错误\n                 */\n                if (xhr.status === 200) {\n                    resolve(JSON.parse(xhr.responseText))\n                } else {\n                    reject(xhr)\n                }\n            }\n        }\n        xhr.send(JSON.stringify(data) || null)\n    })\n}\n","/**\n * @Author: forguo\n * @Date: 2023/2/20 17:35\n * @Description: index.js\n */\nimport log from '@/plugin/log'\nimport request from '@/plugin/request'\nimport ajax from '@/plugin/ajax'\n\n// 使用 export{}，导出与声明分开\nexport { log, request, ajax }\n\nexport default {\n    async install(app: any) {\n        app.config.globalProperties.$log = log\n        app.config.globalProperties.$http = request\n        app.config.globalProperties.$ajax = ajax\n    }\n}\n","/**\n * @Author: forguo\n * @Date: 2022/7/14 13:58\n * @Description: user\n */\nimport { request } from '@/plugin'\n\nexport default {\n    /**\n     * Simulate a login\n     * @param {object} data\n     */\n    login: (data: any) =>\n        request.request({\n            method: 'post',\n            url: '/api/user/login',\n            data\n        })\n}\n","/**\n * @Author: forguo\n * @Date: 2022/7/14 14:00\n * @Description: index\n */\nimport user from './user'\n\nexport default {\n    user\n}\n","import { defineStore, acceptHMRUpdate } from 'pinia'\nimport api from '@/api'\n\nconst useUserStore = defineStore({\n    id: 'user',\n    state: () => ({\n        name: '',\n        isAdmin: false,\n        signature: ''\n    }),\n\n    actions: {\n        /**\n         * user  logout\n         */\n        logout() {\n            this.$patch({\n                name: '',\n                isAdmin: false\n            })\n        },\n        /**\n         * user login\n         * @param {string} user\n         * @param {string} password\n         */\n        async login(user: string, password: string) {\n            const userData = await api.user.login({\n                user,\n                password\n            })\n            const data = {\n                name: user,\n                ...userData.data\n            }\n            console.log('login-success', data)\n            this.$patch(data)\n        }\n    }\n})\n\nexport default useUserStore\n\nif (import.meta.hot) {\n    import.meta.hot.accept(acceptHMRUpdate(useUserStore, import.meta.hot))\n}\n","import { defineStore, acceptHMRUpdate } from 'pinia'\n\nconst useMenuStore = defineStore({\n    id: 'menu',\n    state: () => ({\n        list: []\n    }),\n    actions: {\n        updateMenu(list: Array<any>) {\n            this.$patch({\n                list: [...this.list, ...list]\n            })\n        }\n    }\n})\n\nexport default useMenuStore\n\nif (import.meta.hot) {\n    import.meta.hot.accept(acceptHMRUpdate(useMenuStore, import.meta.hot))\n}\n","<template>\n    <el-container style=\"height: 100vh; overflow: hidden\">\n        <el-aside style=\"max-width: 200px; height: 100vh\" v-if=\"isDev\">\n            <el-menu :default-active=\"$route?.path || '/'\" router style=\"height: 100%\">\n                <el-menu-item\n                    :index=\"path\"\n                    v-for=\"{ path, title, name } in menu.list\"\n                    :key=\"path\"\n                    @select=\"handleNav(name)\"\n                >\n                    <span>{{ title }}</span>\n                </el-menu-item>\n                <el-menu-item :to=\"{ path: '/vue2-app' }\" index=\"/vue2-app\">\n                    <span>vue2微应用</span>\n                </el-menu-item>\n            </el-menu>\n        </el-aside>\n        <el-container>\n            <el-header style=\"background-color: #f6f9fe; display: flex; align-items: center\">\n                <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n                    <el-breadcrumb-item>{{ $route?.meta?.title }}</el-breadcrumb-item>\n                </el-breadcrumb>\n            </el-header>\n            <el-main style=\"background: #f2f3f5\">\n                <el-card\n                    style=\"width: 100%; height: 100%; box-sizing: border-box; display: flex; flex-direction: column\"\n                    shadow=\"never\"\n                    body-style=\"flex: 1;width: 100%; height: 100%;\"\n                >\n                    <!--                    <template #header>-->\n                    <!--                        <div class=\"card-header\">-->\n                    <!--                            <span>{{ $route?.meta?.title }}</span>-->\n                    <!--                        </div>-->\n                    <!--                    </template>-->\n                    <router-view />\n                    <div id=\"vue2App\"></div>\n                </el-card>\n            </el-main>\n            <el-footer\n                style=\"\n                    display: none;\n                    background-color: #f6f9fe;\n                    /*display: flex;*/\n                    align-items: center;\n                    justify-content: center;\n                \"\n            >\n                &copy; 2022\n            </el-footer>\n        </el-container>\n    </el-container>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeRouteUpdate, useRouter, onBeforeRouteLeave } from 'vue-router'\nimport { ref } from 'vue'\nimport { useMenuStore } from '@/store'\nconst isDev = ref(import.meta.env.MODE === 'development')\nconst menu = useMenuStore()\nconst router = useRouter()\nonBeforeRouteUpdate(to => {\n    console.log({ ...router }, to)\n})\nonBeforeRouteLeave(to => {\n    console.log({ ...router }, to)\n})\nconst handleNav = (name: string) => {\n    console.log(name)\n    router.push({\n        name\n    })\n}\n</script>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/10/10 14:23\n * @Description: index\n-->\n<template>\n    <div class=\"page algorithm\">算法</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'AlgorithmView',\n    title: '算法',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<!--\n * @Name: FactoryPatterns.vue\n * @Author: forguo\n * @Date: 2023/4/1 11:09\n * @Description: 工厂模式\n-->\n<template>\n    <el-card>\n        <template #header>{{ title }}</template>\n        <highlightjs language=\"JavaScript\" lineNumbers :autodetect=\"false\" :code=\"code\"></highlightjs>\n    </el-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport { nextTick, defineProps } from 'vue'\ndefineProps({\n    title: String\n})\nconsole.log('工厂模式')\nconst code = `\n// 构造函数和创建者分离\nfunction Jquery (selector) {\n  this.selector = document.querySelectorAll(selector)\n}\n// new操作单独封装\nwindow.$ = function (selector) {\n  return new Jquery(selector)\n}\nvar p = $('div')\nconsole.log(p)\n    `\nnextTick(() => {\n    eval(code)\n})\n</script>\n<style scoped lang=\"scss\"></style>\n","<!--\n * @Name: SinglePatterns.vue\n * @Author: forguo\n * @Date: 2023/4/1 11:09\n * @Description: 单例模式\n-->\n<template>\n    <el-card>\n        <template #header>{{ title }}</template>\n        <highlightjs language=\"JavaScript\" :autodetect=\"false\" :code=\"code\"></highlightjs>\n    </el-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport { defineProps, nextTick } from 'vue'\ndefineProps({\n    title: String\n})\nconst code = `\nclass SingleObject {\n    showMessage() {\n      console.log('showMessage', this)\n    }\n}\nSingleObject.getInstance = (function () {\n   let instance = null\n    return function () {\n      if (!instance) {\n        instance =  new SingleObject()\n      }\n      return instance\n    }\n})()\n\nconsole.log(SingleObject.getInstance() === SingleObject.getInstance())\n    `\nnextTick(() => {\n    eval(code)\n})\n</script>\n<style scoped lang=\"scss\"></style>\n","<!--\n * @Name: AdaptPatterns.vue\n * @Author: forguo\n * @Date: 2023/4/1 11:09\n * @Description: 适配器模式\n-->\n<template>\n    <el-card>\n        <template #header>{{ title }}</template>\n        <highlightjs language=\"JavaScript\" lineNumbers :autodetect=\"false\" :code=\"code\"></highlightjs>\n    </el-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport { defineProps, nextTick } from 'vue'\ndefineProps({\n    title: String\n})\n\nconst code = `\nclass SpecialRequest {\n    request() {\n      return 'old'\n    }\n}\n\nclass Request {\n  constructor() {\n    // 封装旧接口\n    this.adptor = new SpecialRequest()\n  }\n  request () {\n    let type = this.adptor.request()\n    console.log(type)\n  }\n}\nnew Request().request()\n    `\nnextTick(() => {\n    eval(code)\n})\n</script>\n<style scoped lang=\"scss\"></style>\n","<!--\n * @Name: DecoratorPatterns.vue\n * @Author: forguo\n * @Date: 2023/4/1 11:09\n * @Description: 装饰者模式\n-->\n<template>\n    <el-card>\n        <template #header>{{ title }}</template>\n        <el-alert>AOP 面向切片编程</el-alert>\n        <highlightjs language=\"JavaScript\" lineNumbers :autodetect=\"false\" :code=\"code\"></highlightjs>\n    </el-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport { defineProps, nextTick } from 'vue'\ndefineProps({\n    title: String\n})\nconst code = `\nclass Circle {\n    constructor() {\n        this.border = 'none'\n    }\n    draw() {\n        console.log('draw Circle', this)\n    }\n}\n\nclass Client {\n    constructor(circle) {\n        this.circle = circle\n    }\n    // 添加新功能\n    draw() {\n        this.circle.draw()\n        this.setBorder(this.circle)\n        this.circle.draw()\n    }\n    setBorder(circle) {\n        circle.border = '1px'\n        console.log('setBorder', circle)\n    }\n}\nnew Client(new Circle()).draw()\n    `\nnextTick(() => {\n    eval(code)\n})\n</script>\n<style scoped lang=\"scss\"></style>\n","<!--\n * @Name: ProxyPatterns.vue\n * @Author: forguo\n * @Date: 2023/4/1 11:09\n * @Description: 代理模式\n-->\n<template>\n    <el-card>\n        <template #header>{{ title }}</template>\n        <highlightjs language=\"JavaScript\" lineNumbers :autodetect=\"false\" :code=\"code\"></highlightjs>\n    </el-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport { defineProps, nextTick } from 'vue'\ndefineProps({\n    title: String\n})\nconst code = `\nclass ReadImg {\n  constructor(fileName) {\n    this.fileName = fileName\n    this.loadImg()\n  }\n  show() {\n    console.log('show image', this.fileName)\n  }\n  loadImg() {\n    console.log('load image', this.fileName)\n\n  }\n}\nclass ProxyImg {\n  constructor(fileName) {\n    this.img = new ReadImg(fileName)\n  }\n  show() {\n    this.img.show()\n  }\n}\n\nnew ProxyImg('www.png').show()\n    `\nnextTick(() => {\n    eval(code)\n})\n</script>\n<style scoped lang=\"scss\"></style>\n","<template>\n    <div class=\"page page-scroll-y design-patterns\">\n        <el-link href=\"//forguo.cn\" target=\"_blank\" type=\"primary\">设计模式</el-link>\n        <el-collapse>\n            <el-collapse-item title=\"面向对象\">\n                <el-descriptions title=\"\" :column=\"1\">\n                    <el-descriptions-item label=\"面向对象的概念\"></el-descriptions-item>\n                    <el-descriptions-item label=\"面向对象的三要素\"></el-descriptions-item>\n                    <el-descriptions-item label=\"面向对象的意义\">\n                        数据结构化 比如浏览器的渲染，最终是解析成了DOM树，cssom，最后才去渲染\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"jQuery中的应用\"></el-descriptions-item>\n                </el-descriptions>\n            </el-collapse-item>\n            <el-collapse-item title=\"5大设计原则\">\n                <el-descriptions title=\"\" :column=\"1\">\n                    <el-descriptions-item label=\"S\">单一职责原则</el-descriptions-item>\n                    <el-descriptions-item label=\"O\">开放封闭原则（开放扩展，封闭修改）</el-descriptions-item>\n                    <el-descriptions-item label=\"L\">李氏置换原则</el-descriptions-item>\n                    <el-descriptions-item label=\"I\">接口独立原则</el-descriptions-item>\n                    <el-descriptions-item label=\"D\">依赖导致原则</el-descriptions-item>\n                </el-descriptions>\n            </el-collapse-item>\n            <el-collapse-item title=\"23种设计模式\">\n                <el-divider>创建形</el-divider>\n                <FactoryPatterns title=\"工厂模式\" />\n                <SinglePatterns title=\"单列模式\" />\n                <i>原型模式</i>\n                <el-divider>结构形</el-divider>\n                <AdaptPatterns title=\"适配器模式\" />\n                <DecoratorPatterns title=\"装饰器模式\" />\n                <ProxyPatterns title=\"代理模式\" />\n                <i>外观模式</i>\n                <el-divider>组合形</el-divider>\n            </el-collapse-item>\n        </el-collapse>\n    </div>\n</template>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'DesignPatterns',\n    title: '设计模式',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { FactoryPatterns, SinglePatterns, AdaptPatterns, DecoratorPatterns, ProxyPatterns } from './patterns/index'\n</script>\n<style lang=\"scss\">\n.design-patterns {\n    .el-card {\n        margin-bottom: 16px;\n    }\n}\n</style>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/9/17 22:14\n * @Description: index\n-->\n<template>\n    <div class=\"page es6\">es6</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\n// import rawCode from './index'\n\n// async本身就返回了一个promise，默认返回一个resolve(undefined)\nconst request = async () => {\n    console.log('request')\n    // await用于等待一个promise结束，只能在 async 块内使用\n    await new Promise((resolve, reject) => {\n        console.log('setTimeout')\n        setTimeout(() => {\n            console.log('resolve')\n            resolve('async')\n        }, 0)\n    })\n}\n\nonBeforeMount(async () => {\n    console.log('onBeforeMount')\n    // rawCode()\n    request().then(res => {\n        console.log(res)\n    })\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'ES6View',\n    title: 'ES6',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n\n<style scoped></style>\n","<template>\n    <el-card>\n        <el-alert class=\"we-timer\" :closable=\"false\">现在是：{{ nowTime }}</el-alert>\n    </el-card>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onMounted, ref } from 'vue'\n\ndefineProps<{\n    msg?: string\n}>()\ndefineEmits(['count-down'])\nconst radio = ref(3)\n\nconst nowTime = ref<string>('00:00:00')\nconst getNowTime = () => {\n    const now = new Date()\n    const h = now.getHours() < 10 ? `0${now.getHours()}` : now.getHours()\n    const m = now.getMinutes() < 10 ? `0${now.getMinutes()}` : now.getMinutes()\n    const s = now.getSeconds() < 10 ? `0${now.getSeconds()}` : now.getSeconds()\n    nowTime.value = `${h}:${m}:${s}`\n    window.requestAnimationFrame(getNowTime)\n}\n\nonMounted(() => {\n    getNowTime()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.we-timer {\n    font-size: 13px;\n    color: #000;\n}\n</style>\n","<!--\n * @Name: AsyncShow.vue\n * @Author: forguo\n * @Date: 2022/5/17 16:03\n * @Description: AsyncShow\n-->\n<template>\n    <el-card shadow=\"hover\">\n        <template #header>我是异步组件</template>\n        <div>\n            {{ res.data }}\n        </div>\n    </el-card>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { request } from '@/plugin'\n\nexport default defineComponent({\n    name: 'AsyncShow',\n    async setup() {\n        const res = await request.request({\n            url: 'https://api.forguo.cn/common/wechat/sdk',\n            params: {\n                url: window.location.href\n            }\n        })\n        return {\n            res: res.data\n        }\n    }\n})\n</script>\n\n<style scoped></style>\n","<template>\n    <div class=\"home\">\n        <timer :title=\"1\" type=\"success\" />\n        <el-divider />\n\n        <div>\n            <p v-for=\"(item, index) in companies\" :key=\"item.id\">\n                <el-tag :closable=\"false\">{{ item.name }}</el-tag>\n                <el-button @click=\"send(index)\">投递</el-button>\n            </p>\n        </div>\n\n        <p>已经投递：{{ target?.name }}</p>\n\n        <el-divider />\n\n        <suspense>\n            <template #default>\n                <async-show />\n            </template>\n            <template #fallback>加载中...</template>\n        </suspense>\n    </div>\n</template>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'HomeView',\n    title: '首页'\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport {\n    reactive,\n    onBeforeMount,\n    onMounted,\n    onErrorCaptured,\n    watch,\n    onBeforeUpdate,\n    onUpdated,\n    onRenderTracked,\n    onRenderTriggered\n} from 'vue'\nimport { Timer } from '@/components/index'\nimport AsyncShow from '@/components/AsyncShow.vue'\nimport { ElMessage } from 'element-plus'\n\nconsole.log('1-开始创建组件-----setup()')\nconst companies: any[] = reactive([\n    {\n        id: '10001',\n        name: '阿里'\n    },\n    {\n        id: '10002',\n        name: '腾讯'\n    },\n    {\n        id: '10003',\n        name: '字节'\n    }\n])\n\nlet target: any = reactive({})\n\nconst send = (index: number) => {\n    // 不能够直接赋值\n    const item: any = companies[index]\n    target.name = item.name\n}\n\n/**\n * 生命周期\n */\nonBeforeMount(() => {\n    console.log('2-组件挂载到页面之前执行-----onBeforeMount()')\n})\n\nonMounted(() => {\n    console.log('3-组件挂载到页面之后执行-----onMounted()')\n})\nonBeforeUpdate(() => {\n    console.log('4-组件更新之前-----onBeforeUpdate()')\n})\n\nonUpdated(() => {\n    console.log('5-组件更新之后-----onUpdated()')\n})\n\nonRenderTracked(event => {\n    console.log('状态跟踪组件----------->')\n    console.log(event)\n})\n\nonRenderTriggered(event => {\n    console.log('状态触发组件--------------->')\n    console.log(event)\n})\n\n// 监听多个使用数组\nwatch(\n    target,\n    (newValue: any, oldValue: object) => {\n        console.log(`new--->${JSON.stringify(newValue)}`)\n        console.log(`old--->${JSON.stringify(oldValue)}`)\n        if (newValue && newValue.name) {\n            document.title = `已投递：${newValue.name}`\n        }\n    },\n    {\n        deep: true\n    }\n)\n\n// 异常捕获\nonErrorCaptured(err => {\n    console.log('/*******************/')\n    console.log(err)\n    console.log('/*******************/')\n})\n</script>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/10/10 15:45\n * @Description: index\n-->\n<template>\n    <div class=\"page js-base\">JS基础</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nonBeforeMount(() => {})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'JsBaseView',\n    title: 'JS基础',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/10/10 15:45\n * @Description: index\n-->\n<template>\n    <div class=\"page web-api\">Web Api</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'WebApiView',\n    title: 'WebApi',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<!--\n * @Name: Pinia.vue\n * @Author: forguo\n * @Date: 2022/7/14 13:50\n * @Description: Pinia\n-->\n<template>\n    <div class=\"page pinia\">\n        <p>name: {{ user.name }}</p>\n        <p>signature: {{ user.signature || '' }}</p>\n        <p>\n            {{ JSON.stringify(user) }}\n        </p>\n        <el-button @click=\"handleAddCart\">登录</el-button>\n\n        <hr />\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useUserStore } from '@/store'\nimport { ElMessage } from 'element-plus'\n\nexport default defineComponent({\n    components: {},\n    title: '状态',\n    setup() {\n        const user = useUserStore()\n        const handleAddCart = async () => {\n            console.log(user)\n            await user.login('admin', 'root')\n            console.log('handleAddCart --->')\n            ElMessage.success('Login Success~')\n        }\n        return {\n            user,\n            handleAddCart\n        }\n    }\n})\n</script>\n","<template>\n    <div class=\"page race\">\n        <el-card>\n            <el-link target=\"_blank\" href=\"https://mp.weixin.qq.com/s/smOJHGkPegvs5ENv7PTbmw\">竞态问题</el-link>\n            &nbsp;\n            <el-link target=\"_blank\" href=\"https://juejin.cn/post/7071518211392405541#heading-13\">axios封装</el-link>\n            <el-divider />\n            <el-input v-model=\"keyword\" @input=\"handleSearch\" clearable placeholder=\"请输入搜索内容\" />\n            <el-divider />\n            <el-table :data=\"res.data\" empty-text=\"暂无数据\">\n                <el-table-column prop=\"name\" label=\"姓名\" />\n                <el-table-column prop=\"age\" label=\"年龄\" />\n                <el-table-column prop=\"city\" label=\"城市\" />\n            </el-table>\n            <el-button @click=\"cancelRequest\">取消请求</el-button>\n        </el-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\nexport default {\n    name: 'HomeView',\n    title: '竞态问题'\n}\n</script>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount, reactive, ref } from 'vue'\nimport type { Ref } from 'vue'\nimport { request } from '@/plugin'\nimport axios from 'axios'\n\nconst keyword: Ref<string> = ref('')\nlet res = reactive({\n    data: []\n})\n\nconst handleSearch = async (keyword?: string) => {\n    try {\n        request.cancelRequest('/search')\n        const data = await request.request({\n            method: 'post',\n            url: '/search',\n            data: {\n                keyword\n            }\n        })\n        res.data = data.data\n    } catch (e: any) {\n        if (axios.isCancel(e)) {\n            console.log('Request canceled', e)\n        } else {\n            // 处理错误\n            console.log('request', e)\n        }\n    }\n}\n\nconst cancelRequest = () => {\n    const CancelToken = axios.CancelToken\n    const source = CancelToken.source()\n\n    axios\n        .get('/search', {\n            cancelToken: source.token\n        })\n        .catch(function (e) {\n            if (axios.isCancel(e)) {\n                console.log('Request canceled', e.message)\n            } else {\n                // 处理错误\n                console.log('request', e)\n            }\n        })\n\n    axios.post(\n        '/search',\n        {\n            name: 'new name'\n        },\n        {\n            cancelToken: source.token\n        }\n    )\n\n    // 取消请求（message 参数是可选的）\n    source.cancel('Operation canceled by the user.')\n}\nonBeforeMount(() => {\n    handleSearch()\n})\n</script>\n","<!--\n * @Name: TalkingView.vue\n * @Author: forguo\n * @Date: 2023/2/23 15:52\n * @Description: TalkingView\n-->\n<template>\n    <div class=\"page\" :class=\"['talking', { loading: className }]\">\n        <div class=\"talking-inner\" :class=\"{ loading: className }\">\n            <div class=\"talking-device\" :class=\"className\">\n                <!-- 给自己本地的视频播放设置静音，防止产生回音 -->\n                <video id=\"local\" class=\"talking-video\" autoplay playsinline muted></video>\n            </div>\n            <div class=\"talking-device\">\n                <video id=\"remote\" class=\"talking-video\" autoplay playsinline></video>\n            </div>\n            <div>\n                <el-input v-model=\"offerSdp\" placeholder=\"offer\" />\n                <el-input v-model=\"answerSdp\" placeholder=\"answer\" />\n                <div v-html=\"html\"></div>\n            </div>\n        </div>\n        <div class=\"talking-tool\">\n            <el-button @click=\"open\" type=\"primary\">1、发起通话</el-button>\n            <el-button @click=\"createOffer\" type=\"primary\">2、创建 offer</el-button>\n            <el-button @click=\"createAnswer\" type=\"primary\">3、创建 answer</el-button>\n            <el-button @click=\"addAnswer\" type=\"primary\">4、添加 answer</el-button>\n            <el-button @click=\"startRecord\">开始录屏</el-button>\n            <el-button @click=\"stopRecord\">结束录屏并下载</el-button>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'TalkingView',\n    title: 'Rtc通信'\n}\n</script>\n\n<script lang=\"ts\" setup>\n/**\n * 创建一个用于连接控制的 RTCPeerConnection 对象\n * 采集媒体流并添加到RTCPeerConnection 实例中\n * 建立连接，传输媒体流。\n */\n\nimport 'webrtc-adapter'\nimport { ref } from 'vue'\nimport type { Ref } from 'vue'\nimport { ElMessage } from 'element-plus'\nconst pc = new RTCPeerConnection()\n// import rtmp from 'rtmp-stream'\n\n// 创建本地/远程 SDP 描述, 用于描述本地/远程的媒体流\nlet offerSdp: Ref<string> = ref('')\nlet answerSdp: Ref<string> = ref('')\nlet className: Ref<string> = ref('')\nconst html: Ref<string> = ref(\n    'Using text interpolation: <span style=\"color: red\">This should be red.</span><script>console.log(\"alert(1)\")' +\n        '<' +\n        '/script>Using v-html directive: This should be red.'\n)\n// 开启通话\nconst open = async () => {\n    // 获取本地端视频标签\n    const localVideo = document.getElementById('local') as HTMLVideoElement\n    // 获取远程端视频标签\n    const remoteVideo = document.getElementById('remote') as HTMLVideoElement\n\n    // 采集本地媒体流\n    // getDisplayMedia ==> 获取屏幕共享的媒体流\n    const localStream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n    })\n\n    // 设置本地视频流\n    localVideo.srcObject = localStream\n\n    // 不推荐使用：已经过时的方法 [addStream API](https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addStream)\n    // pc.addStream(localStream);\n\n    // 添加本地媒体流的轨道都添加到 RTCPeerConnection 中\n    localStream.getTracks().forEach(track => {\n        console.log(track)\n        pc.addTrack(track, localStream)\n    })\n\n    // 监听远程流，方法一：\n    pc.ontrack = (event: any) => {\n        remoteVideo.srcObject = event.streams[0]\n    }\n\n    // 方法二：你也可以使用 addStream API，来更加详细的控制流的添加\n    // const remoteStream: MediaStream = new MediaStream()\n    // pc.ontrack = (event) => {\n    //   event.streams[0].getTracks().forEach((track) => {\n    //     remoteStream.addTrack(track)\n    //   })\n    //   // 设置远程视频流\n    //   remoteVideo.srcObject = remoteStream\n    // }\n\n    // Create a data channel\n    let dataChannel = pc.createDataChannel('myDataChannel')\n    // 监听文件通道状态\n    // 当文件通道状态发生变化时触发\n    dataChannel.onopen = event => {\n        ElMessage.success('文件通道已打开')\n        console.log('🚀🚀🚀 / event', event)\n    }\n\n    // 当文件通道关闭时触发\n    dataChannel.onclose = event => {\n        ElMessage.warning('文件通道已关闭')\n    }\n\n    // 当文件通道发生错误时触发\n    dataChannel.onerror = event => {\n        ElMessage.error('文件通道发生错误')\n    }\n\n    // 当文件通道收到消息时触发\n    dataChannel.onmessage = event => {\n        // eslint-disable-next-line no-console\n        console.log('🚀🚀🚀 / event', event)\n    }\n\n    pc.createOffer({\n        offerToReceiveVideo: !0,\n        offerToReceiveAudio: !0\n    })\n        .then(offer => {\n            console.log(offer)\n            return pc.setLocalDescription(offer).then(() => {\n                return offer\n            })\n        })\n        .then((offer: any) => {\n            return new Promise((resolve, reject) => {\n                HttpPost('http://127.0.0.1', window.btoa(offer.sdp)).then(\n                    res => {\n                        resolve(res)\n                    },\n                    function (rej) {\n                        reject(rej)\n                    }\n                )\n            })\n        })\n        .then((answerSdp: any) => {\n            return pc.setRemoteDescription(\n                new RTCSessionDescription({\n                    type: 'answer',\n                    sdp: window.atob(answerSdp)\n                })\n            )\n        })\n        .then(() => {})\n        .catch(reason => {\n            throw reason\n        })\n\n    dataChannel.send('Hello world!')\n}\n\nconst HttpPost = (url: string, data: any) => {\n    return new Promise((resolve, reject) => {\n        let xhr: any = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\n                let res = xhr.responseText\n                xhr.onreadystatechange = new Function()\n                xhr = null\n                resolve(res)\n            }\n        }\n        xhr.open('POST', url.replace('webrtc', 'http'), true)\n        xhr.send(data)\n    })\n}\n\n/**\n * 创建 offer（提案）\n */\nconst createOffer = async () => {\n    // 创建 offer\n    const offer = await pc.createOffer()\n    // 设置本地描述\n    await pc.setLocalDescription(offer)\n    // await pc.setLocalDescription()\n    // 到这里，我们本地的 offer 就创建好了，一般在这里通过信令服务器发送 offerSdp 给远端\n\n    // 监听 RTCPeerConnection 的 onicecandidate 事件，当 ICE 服务器返回一个新的候选地址时，就会触发该事件\n    pc.onicecandidate = async event => {\n        if (event.candidate) {\n            offerSdp.value = JSON.stringify(pc.localDescription)\n        }\n    }\n}\n\n/**\n * 创建 answer\n */\nconst createAnswer = async () => {\n    // 解析字符串\n    const offer = JSON.parse(offerSdp.value)\n    pc.onicecandidate = async event => {\n        // Event that fires off when a new answer ICE candidate is created\n        if (event.candidate) {\n            answerSdp.value = JSON.stringify(pc.localDescription)\n        }\n    }\n    await pc.setRemoteDescription(offer)\n    const answer = await pc.createAnswer()\n    await pc.setLocalDescription(answer)\n}\n\n// 添加 answer(应答)\nconst addAnswer = async () => {\n    const answer = JSON.parse(answerSdp.value)\n    if (!pc.currentRemoteDescription) {\n        pc.setRemoteDescription(answer)\n    }\n}\nlet chunks: any = []\nlet recorder: any = null\n\n// 录屏\nconst startRecord = async () => {\n    try {\n        // 获取用户屏幕录制的权限\n        const stream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n        startRecording(stream)\n    } catch (e) {\n        console.log(e)\n    }\n}\n\nconst startRecording = (stream: MediaStream) => {\n    // 确认当前环境所支持的屏幕录制文件类型\n    const mime = MediaRecorder.isTypeSupported('video/webm; codecs=vp9') ? 'video/webm; codecs=vp9' : 'video/webm'\n\n    // 创建MediaRecorder对象\n    recorder = new MediaRecorder(stream, {\n        mimeType: mime\n    })\n\n    // 当录制数据可用时，将数据块添加到数组中\n    recorder.ondataavailable = function (e: { data: any }) {\n        chunks.push(e.data)\n    }\n\n    recorder.onstop = function () {\n        // 创建一个Blob对象\n        let blob = new Blob(chunks, { type: 'video/mp4' })\n\n        // 创建一个URL对象，将Blob对象转换成URL\n        let url = window.URL.createObjectURL(blob)\n\n        // 创建一个video元素，将URL设置为视频源\n        let video = document.createElement('video')\n        video.src = url\n        video.controls = true\n        // 将video元素添加到页面中\n        document.body.appendChild(video)\n    }\n    // 开始录制\n    recorder.start()\n}\n\nconst stopRecord = () => {\n    // 停止录制\n    recorder.stop()\n    setTimeout(() => {\n        downRecord()\n    }, 500)\n}\n\nconst downRecord = () => {\n    const blob = new Blob(chunks, { type: 'video/mp4' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.style.display = 'none'\n    a.download = `record.${Date.now()}.mp4`\n    a.click()\n    ElMessage.success('下载成功')\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.talking {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    &.loading {\n        background: #eee;\n    }\n    &-inner {\n        flex: 1;\n        display: flex;\n    }\n    &-device {\n        border-radius: 8px;\n        overflow: hidden;\n        width: 550px;\n        height: 350px;\n        border: 1px solid #eee;\n        background: #aaa;\n        margin-right: 24px;\n    }\n    &-video {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n}\n</style>\n","export default () => {\n    /**\n     * @Author: forguo\n     * @Date: 2021/10/25 10:11\n     * @Description: typescript 学习\n     */\n\n    // 1.全局安装 typescript\n    // npm install typescript -g\n    // yarn global add typescript\n\n    /**\n     * @title typescript的静态类型\n     */\n\n    // ** 基础静态类型\n    // null,undefined,symbol,boolean，void\n    const count: number = 1\n    const www: string = 'www'\n\n    // ** 自定义静态类型\n    interface People1 {\n        name: string\n        age: number\n    }\n\n    const weiGuo: People1 = {\n        name: 'weiGuo',\n        age: 25\n        // sex: 'man',\n    }\n\n    // ** 对象类型\n\n    // 对象\n    const my: {\n        name: string\n        age: number\n    } = {\n        name: 'weiGuo',\n        age: 25\n        // sex: 'man',\n    }\n\n    // 数组\n    const list: number[] = [1, 2, 3]\n    const list1: Array<number> = [1, 2, 3]\n    const list2: {\n        [index: number]: number\n    } = [1, 2, 3]\n\n    // 函数类型\n    const fn: () => string = () => 'fn1'\n\n    /**\n     * @title 类型注释和类型推断\n     */\n\n    // ** 类型注释\n    const count2: number = 123\n\n    // ** 类型推断\n    const count3 = 123\n\n    // ===> 工作使用问题（潜规则）\n    // 如果 TS 能够自动分析变量类型， 我们就什么也不需要做了\n    // 如果 TS 无法分析变量类型的话， 我们就需要使用类型注解\n\n    /**\n     * @title 函数参数和返回类型定义\n     */\n\n    // ** 简单类型定义\n\n    function getTotal(one: number, two: number): number {\n        return one + two\n    }\n\n    getTotal(1, 2)\n\n    // ** 无返回值的定义: void\n    function hello(): void {\n        console.log('hello')\n    }\n\n    hello()\n\n    // ** never返回值类型\n    // 抛出异常\n    function errFun(): never {\n        throw new Error()\n        console.log('error')\n    }\n\n    // 死循环\n    function whileFun(): never {\n        while (true) {}\n        console.log('error')\n    }\n\n    // ** 函数参数为对象\n\n    function add({ one, two }: { one: number; two: number }) {\n        return one + two\n    }\n\n    const total = add({ one: 1, two: 2 })\n\n    /**\n     * @title 数组类型的定义\n     */\n\n    // ** 基本类型\n    const numArr: number[] = [1, 2, 3]\n    const strArr: string[] = ['1', '2', '3']\n    const undefArr: undefined[] = [undefined, undefined, undefined]\n    const multiArr: (number | string)[] = ['1', 1] // 多个类型\n\n    // ** 对象类型的定义\n    // 类型别名(type alias)\n    type Info = {\n        name: string\n        age: number\n    }\n\n    const infoList: Info[] = [\n        {\n            name: 'forguo',\n            age: 25\n        }\n    ]\n\n    // 类进行定义\n    class InfoClass {\n        name: string | undefined\n        age: number | undefined\n    }\n\n    const infoList2: InfoClass[] = [\n        {\n            name: 'forguo',\n            age: 25\n        }\n    ]\n\n    /**\n     * @title 元组的使用和类型约束\n     */\n\n    // ** 基本应用\n\n    // 简单类型注解\n    const xiaojiejie: (string | number)[] = [0, 'teacher', 28]\n\n    // 数组中的每个元素类型的位置给固定住了，这就叫做元组\n    const xiaojiejie1: [string, number] = ['teacher', 28]\n\n    // ** 使用\n\n    const xiaojiejies: [string, string, number][] = [\n        ['dajiao', 'teacher', 28],\n        ['liuying', 'teacher', 18],\n        ['cuihua', 'teacher', 25]\n    ]\n\n    /**\n     * @title typescript中的interface接口\n     * @desc 用来规范类型的\n     */\n\n    // ** 初步了解\n    interface Girl {\n        name: string\n        age: number\n    }\n\n    const girl: Girl = {\n        name: 'xiaohua',\n        age: 18\n    }\n\n    // ** 类型别名和接口的区别\n    // 类型别名可以直接给类型，比如string，而接口必须代表对象。\n\n    type Name = string\n    const people1: Name = 'name'\n\n    // ** 可选值\n    interface Girl1 {\n        name: string\n        age?: number\n        address?: string\n    }\n\n    const girl1: Girl1 = {\n        name: 'nicai'\n        // age: 18,\n        // address: '浙江杭州'\n    }\n\n    // ** 任意值\n\n    interface Girl3 {\n        name: string\n        [propName: string]: any // 这个的意思是，属性的名字是字符串类型，属性的值可以是任何类型。\n        say(): string\n    }\n\n    const girl3: Girl3 = {\n        name: 'name',\n        sex: 1,\n        say() {\n            return '欢迎光临 ，红浪漫洗浴！！'\n        }\n    }\n\n    // ** 接口和类的约束\n\n    class girlC implements Girl3 {\n        name = ''\n        sex = ''\n        say() {\n            return this.name\n        }\n    }\n\n    // ** 接口间的继承\n\n    interface Teacher extends Girl {\n        teach(): string\n    }\n\n    /* 接口只是在 TypeScript 里帮我们作语法校验的工具，编译成正式的js代码，就不会有任何用处了。 */\n\n    /**\n     * @title typescript中类的概念和使用\n     */\n\n    /**\n     * @title typescript中类的访问类型\n     */\n\n    // ** public 默认 允许在类的内部和外部被调用\n\n    // ** private 只允许在类的内部被调用，外部不允许调用\n\n    // ** protected 允许在类内及继承的子类中使用\n\n    /**\n     * @title typescript中类的构造函数\n     */\n\n    class Person111 {\n        public name: string\n        constructor(name: string) {\n            this.name = name\n        }\n    }\n\n    const person111 = new Person111('www')\n    console.log(person111.name)\n\n    // 简写\n    class Person222 {\n        constructor(public name: string) {}\n    }\n    const person222 = new Person222('http')\n    console.log(person222.name)\n\n    // 类继承中的构造器写法\n\n    class PersonA {\n        constructor(public name: string) {\n            // 这里就不用再去 this.name = name;\n        }\n    }\n\n    class Teacher extends PersonA {\n        constructor(name: string, public age: number) {\n            super(name)\n        }\n    }\n\n    console.log(new Teacher('罗翔', 18))\n\n    /**\n     * @title typescript中类的Getter、Setter和static的使用\n     */\n\n    class XiaoJieJie {\n        public readonly _name: string\n        constructor(name: string, private _age: number) {\n            this._name = name\n        }\n        // ** get\n        get age() {\n            return this._age\n        }\n        // ** set\n        set age(age: number) {\n            this._age = age\n        }\n        say() {\n            return 'I am ' + this._age + 'years old' // XiaoJieJie.prototype.say = function\n        }\n        // ** 不用 new 出对象就可以使用类里的方法\n        static sayLove() {\n            return 'I Love you' // XiaoJieJie.sayLove = function\n        }\n    }\n    const www1 = new XiaoJieJie('www', 18)\n    www1.age = 20\n    // www1._name = 'www'; // 不可以修改\n    console.log(www1.age)\n    // XiaoJieJie.sayLove();\n\n    /**\n     * @title 抽象类的使用\n     */\n\n    abstract class DaBaoJian {\n        abstract skill(): any // 没有具体方法，这里不写括号\n    }\n\n    class PrimaryWaiter extends DaBaoJian {\n        skill() {\n            console.log('初级大保健')\n        }\n    }\n\n    class IntermediateWaiter extends DaBaoJian {\n        skill() {\n            console.log('中级大保健')\n        }\n    }\n\n    class SeniorWaiter extends DaBaoJian {\n        skill() {\n            console.log('终极大保健')\n        }\n    }\n\n    /**\n     * @title tsconfig.json\n     */\n\n    // typescript 的编译配置文件\n\n    // tsc init // 初始化tsconfig文件\n\n    // tsc // tsconfig编译\n\n    // ** 编译选项详解\n\n    // https://www.tslang.cn/docs/handbook/compiler-options.html\n\n    /**\n     * @title 联合类型和类型守护\n     */\n\n    // ** 联合类型 两个以上的参数类型\n    // ** 类型守护 对参数类型进行判断\n\n    /**\n     * @title 枚举的使用\n     */\n\n    enum Status {\n        success = 200,\n        error = 201,\n        auth = 401\n    }\n\n    console.log(Status.error)\n    console.log(Status[200])\n\n    /**\n     * @title 函数泛型\n     */\n\n    // 类型断言，此时不知道返回类型是什么，需要指定一个类型来处理\n    let res: number | string\n\n    res = 1\n    res = '2'\n\n    function get(data: number | string): number | string {\n        return data\n    }\n\n    ;(get(res) as string).length\n}\n","<!--\n * @Name: index.vue\n * @Author: forguo\n * @Date: 2022/9/17 22:14\n * @Description: index\n-->\n<template>\n    <div class=\"page\">typescript</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { onBeforeMount } from 'vue'\nimport rawCode from './index'\nonBeforeMount(() => {\n    rawCode()\n})\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'TsView',\n    title: 'Ts',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n<style scoped></style>\n","<template>\n    <div class=\"page wei-design\">\n        <h2>组件库</h2>\n\n        <el-divider />\n\n        <we-button @click=\"handleClick\">Default</we-button>\n    </div>\n</template>\n\n<script lang=\"ts\" setup>\nconst handleClick = () => {\n    console.log('success')\n}\n</script>\n\n<script lang=\"ts\">\n// 使用了setup写法时，额外的name、title等信息，需要单独一个script标签，并且lang同setup的script标签\nexport default {\n    name: 'WeiDesignView',\n    title: '组件库',\n    inheritAttrs: false,\n    customOptions: {}\n}\n</script>\n","/**\n * @Author: forguo\n * @Date: 2023/2/23 17:04\n * @Description: index.ts\n */\nimport { createRouter, createWebHistory } from 'vue-router'\n\n// 路由集合\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        title: '首页',\n        component: () => import('@/views/Home/index.vue'),\n        meta: {\n            name: 'Home',\n            title: '首页'\n        }\n    }\n]\n\n// 匹配到的文件默认是懒加载的，通过动态导入实现，并会在构建时分离为独立的 chunk。如果你倾向于直接引入所有的模块（例如依赖于这些模块中的副作用首先被应用），你可以传入 { eager: true } 作为第二个参数：\nconst views = import.meta.glob(`@/views/*/index.vue`, { eager: true })\n\n// 动态加载路由\nfor (const componentPath in views) {\n    const module: any = views[componentPath]\n    const match: Array<any> = componentPath.match(/..\\/views\\/(\\w+)/) || []\n    /// 匹配到的路由名称\n    const routerName = match[1]\n    // 找到example的组件，并加载\n    const $component = module.default\n    // 默认首页必须得\n    if (routerName && routerName !== 'Home' && !$component.hidden) {\n        const routerTitle = $component.title\n        const title = routerTitle || routerName\n        routes.push({\n            path: routerName === 'Home' ? '/' : `/${routerName}`,\n            name: routerName,\n            title,\n            component: $component,\n            meta: {\n                name: routerName,\n                title\n            }\n        })\n    }\n}\n\nconst router = createRouter({\n    history: createWebHistory(import.meta.env.BASE_URL),\n    routes: [...routes]\n})\n\nexport const menus = routes.map((item: any) => {\n    delete item.component\n    return {\n        ...item\n    }\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport { registerMicroApps, start } from 'qiankun'\nimport { createPinia } from 'pinia' // 状态管理\nimport { useMenuStore } from '@/store'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\n// highlight 的样式，依赖包，组件\nimport 'highlight.js/styles/github-dark.css'\nimport 'highlight.js/lib/common'\nimport hljsVuePlugin from '@highlightjs/vue-plugin'\n\n// @ts-ignore\nimport WeDesign from '@wei_design/web-vue'\nimport '@wei_design/web-vue/lib/style.css'\n\nimport plugin, { log } from '@/plugin'\nimport App from './App.vue'\nimport './assets/main.scss'\nimport router, { menus } from './router'\n\nlog.capsule('Environment', `${import.meta.env.MODE}`, 'primary')\n// @ts-ignore\nlog.capsule('Version', `${process.env.APP_VERSION}`, 'primary')\n// @ts-ignore\nlog.capsule('BuildTime', `${process.env.APP_BUILD_TIME}`, 'primary')\n\nconst app = createApp(App)\n\napp.use(plugin).use(createPinia()).use(router).use(ElementPlus).use(WeDesign).use(hljsVuePlugin).mount('#app')\n\nconst menu = useMenuStore()\nmenu.updateMenu(menus)\n\n// 1、主应用中注册微应用\nregisterMicroApps([\n    {\n        name: 'vue2-app',\n        entry:\n            import.meta.env.MODE === 'development' ? '//localhost:10087' : '//wforguo.github.io/daily-code/vue2-app/',\n        container: '#vue2App',\n        activeRule: '/vue2-app',\n        props: { menus }\n    }\n])\nstart()\n"],"names":["type","color","title","info","textArr","t","text","config","__publicField","request","url","controller","res","urlList","_url","_a","params","resolve","reject","method","data","xhr","app","user","password","userData","list","isDev","menu","router","to","handleNav","name","__default__","nowTime","getNowTime","now","h","m","s","_resolveComponent","_createBlock","_component_el_card","_withCtx","_createTextVNode","companies","target","send","index","item","event","newValue","oldValue","err","_component_el_button","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","_createVNode","keyword","handleSearch","e","cancelRequest","source","pc","offerSdp","answerSdp","className","html","open","localVideo","remoteVideo","localStream","track","dataChannel","offer","HttpPost","rej","reason","createOffer","createAnswer","answer","addAnswer","chunks","recorder","startRecord","stream","startRecording","mime","blob","video","stopRecord","downRecord","a","hello","Person111","person111","Person222","person222","PersonA","Teacher","age","XiaoJieJie","_age","www1","Status","get","handleClick","componentPath","module","routerName","$component","App","ElementPlus","WeDesign","hljsVuePlugin"],"mappings":"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"}